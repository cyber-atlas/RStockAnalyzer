install.packages('tidyverse')
R
install.packages('rvest')
install.packages('rvest')
install.packages('httr')
install.packages('httr')
install.packages('httr')
install.packages("openssl")
install.packages("openssl")
install.packages('httr')
install.packages(c("ggplot2", "magrittr", "quantmod", "tidyquant"))
install.packages('tseries')
install.packages('quadprog')
install.packages(c("quantmod", "ggplot2", "magrittr", "tidyquant", "dplyr"))
clear
install.packages("tidyquant")
install.packages("timetk")
install.packages("tseries")
install.packages("quadprogXT")
version
install.packages(c("ggplot2", "magrittr", "quantmod", "tidyquant"))
# install.packages("quantmod")
library('quantmod')
library('ggplot2')
# install.packages("magrittr")
library('magrittr')
# install.packages("tidyquant")
library('tidyquant')
#Define start and End dates
start <- as.Date("2018-04-25")
end <- as.Date("2019-04-25")
getSymbols(c("AAPL", "AMD", "SPY", "MU"), src="yahoo", from = start, to = end)
#Charts the prices of the SPY 500
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds the simple moving average
plot(addSMA(n = 20))
#Extract taht data
#use function lines t
candleChart(SPY, up.col="green", dn.col="red", theme="white")
addMACD()
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds Bollinger Bands
addBBands()
chartSeries(AMD, type='candlesticks')
# AAPL <- tq_get("AAPL", from="2019-01-01")
AAPL2 <- tq_get("AAPL")
AAP2L %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 15) %>%
rename(SMA.15 = SMA)
# install.packages("quantmod")
library('quantmod')
library('ggplot2')
# install.packages("magrittr")
library('magrittr')
# install.packages("tidyquant")
library('tidyquant')
#Define start and End dates
start <- as.Date("2018-04-25")
end <- as.Date("2019-04-25")
getSymbols(c("AAPL", "AMD", "SPY", "MU"), src="yahoo", from = start, to = end)
#Charts the prices of the SPY 500
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds the simple moving average
plot(addSMA(n = 20))
#Extract taht data
#use function lines t
candleChart(SPY, up.col="green", dn.col="red", theme="white")
addMACD()
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds Bollinger Bands
addBBands()
chartSeries(AMD, type='candlesticks')
# AAPL <- tq_get("AAPL", from="2019-01-01")
AAPL2 <- tq_get("AAPL")
AAPL2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 15) %>%
rename(SMA.15 = SMA)
# AAPL <- tq_get("AAPL", from="2019-01-01")
AAPL2 <- tq_get("AAPL")
AAPL2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 15) %>%
rename(SMA.15 = SMA)
AAPL2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 15) %>%
rename(SMA.15 = SMA)
AAPL2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, x = 15) %>%
rename(SMA.15 = SMA)
n
AAPL2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 15) %>%
rename(SMA.15 = SMA)
getSymbols(c("AAPL", "AMD", "SPY", "MU"), src="yahoo", from = start, to = end)
# install.packages("quantmod")
library('quantmod')
library('ggplot2')
# install.packages("magrittr")
library('magrittr')
# install.packages("tidyquant")
library('tidyquant')
#Define start and End dates
start <- as.Date("2018-04-25")
end <- as.Date("2019-04-25")
getSymbols(c("AAPL", "AMD", "SPY", "MU"), src="yahoo", from = start, to = end)
#Charts the prices of the SPY 500
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds the simple moving average
plot(addSMA(n = 20))
#Extract taht data
#use function lines t
candleChart(SPY, up.col="green", dn.col="red", theme="white")
addMACD()
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds Bollinger Bands
addBBands()
chartSeries(AMD, type='candlesticks')
# AAPL <- tq_get("AAPL", from="2019-01-01")
AAPL2 <- tq_get("AAPL")
AAPL2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 15) %>%
rename(SMA.15 = SMA)
View(AMD)
View(AAPL2)
typeof(AAPL2)
AAPL2[,2]
AAPL2[2]
AAPL2[,2]
blacks = AAPL2
blacks[,2]
View(blacks)
View(blacks)
blacks[,2] = 1
?SMA
SMA(blacks,n=20)
SMA(blacks[,1],n=20)
SMA(blacks[,1][1],n=20)
?SMA
smooth()
library(smooth)
install.packages(smototh)
install.packages(smooth)
install.packages("smooth")
library(smooth)
SMA()
sma()
?sma
?SMA
SMA(c(3,2,4,5,1,3),n=4)
SMA(c(3,2,4,5,1,3),n=4)
blacks[,3]
unlist(blacks[,3])
typeof(blacks[,3])
typeof(c(3,4,2,2,5,2))
?unlist
blacks[,3]
as.numeric(blacks[,3])
unlist(blacks[,3])
unlist(blacks[,3])[[1]]
unlist(blacks[,3])[[3]]
unlist(blacks[,3])[[10]]
binks = unlist(blacks[,3])
binks
typeof(binks)
SMA(binks,n=10)
AAPL2 %>%
tq_mutate(x_fun = Cl)
AAPL2 %>%
tq_mutate(x_fun = Cl)
AAPL2 %>%
mutate(chris, SMA(unzip(APPLE2[,12]), n=20))
AAPL2 %>%
mutate(chris = SMA(unzip(APPLE2[,12]), n=20))
AAPL2 %>%
mutate(chris = SMA(unzip(APPL2[,12]), n=20))
# AAPL <- tq_get("AAPL", from="2019-01-01")
AAPL2 <- tq_get("AAPL")
AAPL2 %>%
mutate(chris = SMA(unzip(APPL2[,12]), n=20))
AAPL2 %>%
mutate(chris = SMA(unzip(APPL2[,2]), n=20))
AAPL2 %>%
mutate(chris = SMA(unzip(AAPL2[,2]), n=20))
AAPL2 %>%
mutate(chris = SMA(unlist(AAPL2[,2]), n=20))
#Trying a differnt (cleaner way to get the data)
SPY2 <- tq_get("SPY")
SPY2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA)
#
# # SMA
SPY2 %>%
ggplot(aes(x = date, y = close)) +
geom_line() +           # Plot stock price
geom_bbands(aes(high = high, low = low, close = close), ma_fun = SMA, n = 50) +
coord_x_date(xlim = c(today() - years(1), today()), ylim = c(80, 130))
#
# # SMA
SPY2 %>%
ggplot(aes(x = date, y = close)) +
geom_line() +           # Plot stock price
geom_bbands(aes(high = high, low = low, close = close), SMA.close) +
coord_x_date(xlim = c(today() - years(1), today()), ylim = c(80, 130))
#Trying a differnt (cleaner way to get the data)
SPY2 <- tq_get("SPY")
SPY2 %>%
tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA)
#Trying a differnt (cleaner way to get the data)
SPY2 <- tq_get("SPY")
# SPY2 %>%
#     tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 20) %>%
#     rename(SMA.20 = SMA)
# Had a bunch of issues with the mutate functions that were provided by the library
# unzip(A)
SPY2 %>%
mutate(SMA.close = SMA(unlist(SPY2[,2]), n=20))
#
# # SMA
SPY2 %>%
ggplot(aes(x = date, y = close)) +
geom_line() +           # Plot stock price
geom_bbands(aes(high = high, low = low, close = close), SMA.close) +
coord_x_date(xlim = c(today() - years(1), today()), ylim = c(80, 130))
#Trying a differnt (cleaner way to get the data)
SPY2 <- tq_get("SPY")
# install.packages("quantmod")
library('quantmod')
library('ggplot2')
# install.packages("magrittr")
library('magrittr')
# install.packages("tidyquant")
library('tidyquant')
#Define start and End dates
start <- as.Date("2018-04-25")
end <- as.Date("2019-04-25")
getSymbols(c("AAPL", "AMD", "SPY", "MU"), src="yahoo", from = start, to = end)
#Charts the prices of the SPY 500
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds the simple moving average
plot(addSMA(n = 20))
#Extract taht data
#use function lines t
candleChart(SPY, up.col="green", dn.col="red", theme="white")
addMACD()
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds Bollinger Bands
addBBands()
chartSeries(AMD, type='candlesticks')
#Trying a differnt (cleaner way to get the data)
SPY2 <- tq_get("SPY")
# SPY2 %>%
#     tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 20) %>%
#     rename(SMA.20 = SMA)
# Had a bunch of issues with the mutate functions that were provided by the library
# unzip(A)
SPY2 %>%
mutate(SMA.close = SMA(unlist(SPY2[,2]), n=20)) %>%
#
# # SMA
# SPY2 %>%
ggplot(aes(x = date, y = close)) +
geom_line() +           # Plot stock price
geom_bbands(aes(high = high, low = low, close = close), SMA.close) +
coord_x_date(xlim = c(today() - years(1), today()), ylim = c(80, 130))
# Had a bunch of issues with the mutate functions that were provided by the library
# unzip(A)
SPY2 %>%
mutate(SMA.close = SMA(unlist(SPY2[,2]), n=20)) %>%
#
# # SMA
# SPY2 %>%
ggplot(aes(x = date, y = close)) +
geom_line() +           # Plot stock price
geom_bbands(aes(high = high, low = low, close = close)) +
coord_x_date(xlim = c(today() - years(1), today()), ylim = c(80, 130))
head(SPY2)
# Had a bunch of issues with the mutate functions that were provided by the library
# unzip(A)
SPY2 %<>%
mutate(SMA.close = SMA(unlist(SPY2[,2]), n=20))
head(SPY2)
head(SPY2,30)
```{r}
getSymbols('BA')
# install.packages("quantmod")
library('quantmod')
library('ggplot2')
# install.packages("magrittr")
library('magrittr')
# install.packages("tidyquant")
library('tidyquant')
#Define start and End dates
start <- as.Date("2018-04-25")
end <- as.Date("2019-04-25")
getSymbols(c("AAPL", "AMD", "SPY", "MU"), src="yahoo", from = start, to = end)
#Charts the prices of the SPY 500
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds the simple moving average
plot(addSMA(n = 20))
#Extract taht data
#use function lines t
candleChart(SPY, up.col="green", dn.col="red", theme="white")
addMACD()
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds Bollinger Bands
addBBands()
chartSeries(AMD, type='candlesticks')
#Now let's add Bollinger Bands to it
addBBands()
#Trying a differnt (cleaner way to get the data)
SPY2 <- tq_get("SPY")
# SPY2 %>%
#     tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 20) %>%
#     rename(SMA.20 = SMA)
# Had a bunch of issues with the mutate functions that were provided by the library
# unzip(A)
SPY2 %<>%
mutate(SMA.close = SMA(unlist(SPY2[,2]), n=20))
head(SPY2,30)
# install.packages("quantmod")
library('quantmod')
library('ggplot2')
# install.packages("magrittr")
library('magrittr')
# install.packages("tidyquant")
library('tidyquant')
#Define start and End dates
start <- as.Date("2018-04-25")
end <- as.Date("2019-04-25")
getSymbols(c("AAPL", "AMD", "SPY", "MU"), src="yahoo", from = start, to = end)
#Charts the prices of the SPY 500
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds the simple moving average
plot(addSMA(n = 20))
#Extract taht data
#use function lines t
candleChart(SPY, up.col="green", dn.col="red", theme="white")
addMACD()
candleChart(SPY, up.col="green", dn.col="red", theme="white")
#Adds Bollinger Bands
addBBands()
chartSeries(AMD, type='candlesticks')
#Now let's add Bollinger Bands to it
addBBands()
#Trying a differnt (cleaner way to get the data)
SPY2 <- tq_get("SPY")
# SPY2 %>%
#     tq_mutate(x_fun = Cl, mutate_fun = SMA, n = 20) %>%
#     rename(SMA.20 = SMA)
# Had a bunch of issues with the mutate functions that were provided by the library
# unzip(A)
SPY2 %<>%
mutate(SMA.close = SMA(unlist(SPY2[,2]), n=20))
head(SPY2,30)
#Can merge data
head(as.xts(merge(AMD, ITC)))
#Can merge data
head(as.xts(merge(AMD, AAPL)))
